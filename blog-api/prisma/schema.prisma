// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  firstName    String    @map("first_name")
  lastName     String    @map("last_name")
  passwordHash String    @map("password_hash")
  avatar       String?
  token        Token?
  comments     Comment[]
  posts        Post[]
  likes        Like[]
  veiws        View[]

  @@map("users")
}

model Token {
  id     Int      @id @default(autoincrement())
  token  String   @unique
  exp    DateTime
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int      @unique @map("user_id")

  @@map("tokens")
}

model Post {
  id          Int       @id @default(autoincrement())
  author      User?     @relation(fields: [authorId], references: [id])
  authorId    Int       @unique @map("author_id")
  media       String
  title       String
  description String
  comments    Comment[]
  likes       Like[]
  veiws       View[]

  @@map("posts")
}

model Comment {
  id          Int    @id @default(autoincrement())
  post        Post   @relation(fields: [postId], references: [id])
  postId      Int    @unique @map("post_id")
  author      User   @relation(fields: [authorId], references: [id])
  authorId    Int    @unique @map("author_id")
  description String

  @@map("comments")
}

model Like {
  id       Int  @id @default(autoincrement())
  author   User @relation(fields: [authorId], references: [id])
  authorId Int  @unique @map("author_id")
  post     Post @relation(fields: [postId], references: [id])
  postId   Int  @unique @map("post_id")

  @@map("likes")
}

model View {
  id       Int  @id @default(autoincrement())
  author   User @relation(fields: [authorId], references: [id])
  authorId Int  @unique @map("author_id")
  post     Post @relation(fields: [postId], references: [id])
  postId   Int  @unique @map("post_id")

  @@map("views")
}
